<% http_port = config.get_http_port(443) %>
<% http_static_ip = config.get_backend_static_ip() %>
<% http_hostname = config.get_http_hostname() %>

<%include file="_http_upstream.tmpl"/>

server {
    listen       80;

    server_name ${http_hostname} ${config.get_param('http.aliases')};

    return 301 https://$host$request_uri;
}

server {
    listen *:${http_port} ssl;

    server_name ${http_hostname} ${config.get_param('http.aliases')} ;

<%include file="_http_logging.tmpl"/>

    ssl_certificate      ${ctx.require_file(config.watch_file(f"/etc/letsencrypt/live/{http_hostname}/fullchain.pem"))} ;
    ssl_certificate_key  /etc/letsencrypt/live/${http_hostname}/privkey.pem;

    ssl_protocols        TLSv1.2;
    ssl_session_cache    shared:ssl_${ctx.slug(name)}:1m;
    ssl_session_timeout  5m;

    ssl_prefer_server_ciphers  on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    client_max_body_size ${config.get_param_int("http.client_max_body_size", 100)}M;

<%include file="_http_proxy_common_server.tmpl"/>

    #error_page  404              /404.html;

    error_page   500 502 503 504  /50x.html;
#    location = /50x.html {
#        root   /srv/www/htdocs/;
#    }

% if config.active:
    location / {
<%include file="_http_proxy_location.tmpl"/>
    }
% else:
   location / {
        return 502 ;
   }
% endif
}
